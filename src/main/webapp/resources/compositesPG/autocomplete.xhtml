<ui:composition
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
	xmlns:composite="http://xmlns.jcp.org/jsf/composite"
	xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:pt="http://xmlns.jcp.org/jsf/passthrough">

	<composite:interface>
		<composite:attribute name="name" />
		<composite:attribute name="field" />
		<composite:attribute name="renderimage" />
		<composite:attribute name="placeholder" />
		<composite:attribute name="afterselectaction" method-signature="void listener()"/>
		<composite:attribute name="autocompletefunction" method-signature="void listener()"/>
		<composite:attribute name="execute" />
		<composite:attribute name="render" />
	</composite:interface>

	<composite:implementation>
		<autocomplete id="#{cc.attrs.name}_autocompleteRiot"></autocomplete>
        <h:inputText class="#{cc.attrs.name}_autocompleteHiddenInput" id="#{cc.attrs.name}_autocompleteHiddenInput" style="display:none" value="#{cc.attrs.field}" pt:placeholder="#{cc.attrs.placeholder}" />

        <h:commandScript name="#{cc.attrs.name}_requestAutocomplete" action="#{cc.attrs.autocompletefunction}" onevent="#{cc.attrs.name}_autocompleted" render="" pt:data-noaction="true" />
	    <h:commandScript
	        pt:data-renderimage="#{cc.attrs.renderimage}"
	        name="#{cc.attrs.name}_sendAutocompleteValue"
	        action="#{cc.attrs.afterselectaction}"
	        execute="#{cc.attrs.execute} #{cc.attrs.name}_autocompleteHiddenInput"
	        render="#{cc.attrs.render}" />

		<script>
			function #{cc.attrs.name}_enterValue(value) {
	        	document.querySelector('.#{cc.attrs.name}_autocompleteHiddenInput').value = value;
       			#{cc.attrs.name}_sendAutocompleteValue();
	        }
		 	function #{cc.attrs.name}_autocompleted(e) {
	        	if(e.status === "complete") {
	        		var autocomplete = document.querySelector('autocomplete##{cc.attrs.name}_autocompleteRiot')._tag
	        		autocomplete.onAutocompleteResponse(JSON.parse(e.responseText))
	        	}
	        }
	        function #{cc.attrs.name}_sendAutocomplete(value) {
	        	#{cc.attrs.name}_requestAutocomplete({suggest: value})
	        }
	        $(document).on('load', function() {
	        	var ocOpts = function() {
    	        	return {
    	        		requestAutocomplete: #{cc.attrs.name}_sendAutocomplete,
    	        		enterValue: #{cc.attrs.name}_enterValue,
    	        		initialValue: document.querySelector('.#{cc.attrs.name}_autocompleteHiddenInput').value
    	        	}
	        	}
	        	riot.mount('##{cc.attrs.name}_autocompleteRiot', ocOpts());
    	        if(!window.riot_mounts) {
    	        	window.riot_mounts = {};
    	        }
    	        window.riot_mounts['##{cc.attrs.name}_autocompleteRiot'] = ocOpts;
    	        console.log(window.riot_mounts)
	        })
		</script>
	</composite:implementation>

</ui:composition>
