input,
select,
textarea {
  &:hover {
    border-color: var(--clr-primary-400) !important;
  }
  &[type="checkbox"] {
    margin-right: 5px;
  }
}

.ui-calendar {
  width: 100%;
  .hasDatepicker {
    width: 100%;
  }
}

.form-control,
.form-select {
  font-size: var(--fs-400)
}

th {
  font-weight: inherit;
}

.form-group {
  padding: 8px;
  margin-bottom: 0;
}

label,
.form__label {
  font-size: var(--fs-400);
  align-self: flex-start;
  display: flex;
  overflow: hidden;
  hyphens: auto;
  .fa {
    font-size: var(--fs-200, 10px);
  }
}

.form__help,
.help-block {
  flex: 1 1 100%;

  span {
    color: var(--clr-neutral-600);
  }

  .text-danger, // error msg
  .help-block // help text
  {
    margin-left: 1px;
    margin-top: 4px;
  }
}

// BS helper
.form-text {
  font-size: var(--fs-400);
}

.label-col {
  background-color: var(--clr-neutral-200);
  border-right: 1px solid var(--clr-neutral-300);

  @media screen and (max-width: 767px) {
    border-right: 0;
  }

  .fa-asterisk {
    vertical-align: super;
  }
}

.label-left {
  .form-group {
    display: flex;
    padding: 0;
  }

  .form-group > [class^="col"] {
    padding: 1rem;
    border-bottom: 1px solid var(--clr-border, #ced4da);
  }

  .control-label {
    background-color: var(--clr-neutral-200);
    border-right: 1px solid var(--clr-border, #ced4da);
  }

  .control-label [class^="col-"] {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
  }
}

option:checked {
  background-color: var(--clr-primary-400);
  color: #fff;
}

// BS 5 Overrides
.input-group-text {
  background-color: var(--clr-neutral-200);
}

// Other overrides
body .ui-inputfield {
  border: var(--gw-border);
  border-color: var(--bs-border-color);
  border-radius: var(--gw-border-radius);
  font-size: 0.75rem;
  padding: .375rem .75rem;
  &:hover {
    border-color: var(--clr-primary-400);
  }
  &.ui-state-error {
    border-color: var(--bs-border-color);
  }
}
// override for reduced opacity in spans SURROUNDING input in primefaces
body .ui-state-disabled {
  opacity: initial;
}
body {
  .ui-autocomplete-panel {
    border-radius: var(--gw-border-radius);
    .ui-autocomplete-items {
      .ui-autocomplete-item {
        line-height: 1.5;
        margin-inline: 0.5em;
        &.ui-state-highlight {
          background-color: var(--clr-neutral-200);
        }
      }
    }
  }
}

// Option buttons
.select-radio td {
  display: flex;
  gap: 4px;
  align-items: center;
}
.select-radio-horizontal tr {
  display: flex;
  gap: 12px;
  border-width: 0 !important;
}

fieldSet:disabled .badge,
fieldSet:disabled .badge > a {
  opacity: var(--bs-btn-disabled-opacity);
  pointer-events: none;
}

// re-implementation of forms in non-combinatory classes
// TODO: stacked form-rows need styling similar to fieldsets on small screens
.form-row {
  border-block-end: 1px solid var(--clr-neutral-300);
  display: flex;
  flex-wrap: wrap;
  width: 100%;
  > .form-row {
    border: 0;
    padding: 0;
  }
}

.form-input,
.form-label {
  display: flex;
  flex: 0 0 auto;
  flex-wrap: nowrap;
  padding: 0.5rem;
  margin: 0;
  max-width: 100%;
  min-height: 2.8125rem;
  width: 100%;
}

.form-label {
  background: var(--clr-neutral-200);
  border-inline-end: 1px solid var(--clr-neutral-300);
  > .btn{
    padding-block-start: 0;
    &:first-of-type {
      margin-inline-start: auto;
    }
  }
}

.form-input {
  background: var(--clr-white);
  &:has(.form-row) {
    padding: 0;
  }
  > .form-row:last-child {
    border-block-end: 0;
  }
  > input {
    margin-block: auto;
  }
}

@media (min-width: 768px) {
  .form-label {
    width: 25%;
  }
  .form-label+.form-input {
    width: 75%;
  }
}

.field-set {
  background: var(--clr-neutral-200);
  border-block-end: 1px solid var(--clr-neutral-300);
  display: flex;
  width: 100%;
  > .field-set-legend {
    border-inline-end: 1px solid var(--clr-neutral-300);
    display: flex;
    font-size: var(--fs-400);
    margin: 0;
    padding: 0.5rem;
    > .btn {
      padding-block-start: 0;
      &:first-of-type {
        margin-block-end: auto;
        margin-inline-start: auto;
      }
    }
  }
  > .field-set-content {
    display: flex;
    flex: 1 0 auto;
    flex-direction: column;
    justify-content: space-between;
    width: 75%;
  }
  .form-row {
    background: white;
    border: 0;
    display: flex;
    flex: 0 1 auto;
    flex-direction: column;
      padding-block: 0.25rem;
      padding-inline: 0.5rem;
      &:first-of-type {
        padding-block-start: 0.5rem;
      }
      &:last-of-type {
        padding-block-end: 0.5rem;
      }
    }
  .form-label,
  .form-input {
    border: 0;
    flex: 0 1 auto;
    min-height: unset;
    width: 100% !important;
  }
  .form-label {
    background: white;
    color: var(--clr-neutral-600);
    padding: 0.125em;
  }
  .form-input {
    padding: 0;
  }
  .form-row:last-of-type {
    border-block-end: 0;
  }
  &:has(.form-fieldset-remove) {
    border: 0;
    display: flex;
    flex-wrap: nowrap;
    > * {
      width: calc(100% - 4em);
      > .form-row:last-child {
        // border-block-end: 0;
      }
    }
  }
  > .form-fieldset-remove {
    border-inline-end: 1px solid var(--clr-neutral-300);
    width: 4em;
    > .btn {
      height: 100%;
    }
  }
  @media (min-width: 768px) {
    .form-label {
      width: 15%;
    }
    .form-label+.form-input {
      width: 85%;
    }
    > .field-set-legend {
      flex: 0 0 auto;
      width: 25%;
    }
    > .field-set-content {
      padding: 0;
      margin: 0;
    }
  }
}

.field-set-legend,
.field-set-content,
.field-label,
.form-row {
  .font-light {
    color: #777;
    &:hover {
      color: #222;
    }
  }
}

.field-set .field-set {
  border-block: 0;
  // border-block-end: 1px solid var(--clr-neutral-300);
  &:last-of-type {
    // border-block-end: 0;
  }
  &:has(.form-label) {
    &:last-of-type .field-set-content {
      border-block-end: 0;
    }
    // padding-block: 0.125em;
    .field-set-content {
      border-block-end: 1px solid var(--clr-neutral-300);
    }
  }
}

.field-set .field-set + .field-set {
  padding-block-start: 0.125rem;
  .field-set-content {
    border-block-start: 1px solid var(--clr-neutral-300);
  }
}


.field-set:not(:has(>.field-set-legend)) .form-label {
  border-inline-start: 0;
}

.field-set-content:has(>.btn) {
  position: relative;
  .form-row {
    padding-inline-end: 2.5rem;
  }
  > .btn {
    // border-block: 1px solid var(--clr-neutral-300);
    // border-inline-end: 1px solid var(--clr-neutral-300);
    border-inline-start: 1px solid var(--clr-neutral-300);
    height: 100%;
    justify-content: center;
    right: 0;
    position: absolute;
    width: 2rem;
    // flex display is needed for correct position of button icon when JSF outputs an anchor
    display: flex;
    align-items: center;
  }
}

.form-row:has(>.btn) {
  position: relative;
  .form-input {
    padding-inline-end: 2.5rem;
  }
  > .btn {
    border-inline-start: 1px solid var(--clr-neutral-300);
    border-radius: 0;
    height: 100%;
    justify-content: center;
    right: 0;
    position: absolute;
    width: 2rem;
    display: flex;
    align-items: center;
  }
}

.form-legacy-wrapper {
  position: relative;
  > .row {
    > .col-md-8,
    > .col-md-1 {
      padding-inline-end: 2.5rem !important;
    }
  }
  > .btn {
    border-inline-start: 1px solid var(--clr-neutral-300);
    border-block-end: 1px solid var(--clr-neutral-300);
    height: 100%;
    justify-content: center;
    right: 0;
    position: absolute;
    width: 2rem;
    display: flex;
    align-items: center;
    top: 0;
    &.font-light {
      color: #777;
      &:hover {
        color: #222;
      }
    }
  }
}

.field-set:has(.field-set) {
  padding: 0;
  border-block-end: 0;
}

// input elements in box titles, should be mostly search/filter inputs
.box__title {
  input {
    max-width: 50%;
    width: 15rem;
  }
  .form-control {
    padding: 0.3125rem 0.75rem;
  }
}