<?xml version="1.0" encoding="UTF-8" ?>
<config>

	<!--########################################################## *############################################################# 
		* * general parameters * *############################################################# 
		*########################################################### -->

	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ * 
	Path to local config file
		/> *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<localConfigPath value="/opt/digiverso/goobi/config/config_contentServer.xml" />

	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ * default 
		resulution for results of image processing * sample: <defaultResolution value="600" 
		/> *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<defaultResolution value="600" />

	<!-- (MB); if 0 then disabled -->
	<maxFileLength value="0" />

        <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ * 
        Set quality with which to scale images. Possible settings are SPEED, QUALITY, ULTRAQUALITY
        Higher qualities require more processing time
        MaxStepSize may range from 0 to 99; higher values increase both image quality and loading times for QUALITY and ULTRAQUALITY.
        Recommended values lie between 10 and 50
        useScalrForJpeg activates a different scaling method for jpeg-images which generally operates
        much slower, so it is recommended to set this option to "false"
         *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
    <scaling quality="QUALITY" maxStepSize="25" thumbnailQuality="QUALITY"></scaling>
    
       <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ * 
        General rendering options.
         *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
   <imageTypeSettings>
        <type format="png">
            <settings forceConvertToRGB="false"/>
        </type>
        <type format="jp2">
            <settings allowSubSampling="true" scaleWithScalr="true"/>
        </type>
        <type colorType="grayscale">
            <settings scaleWithScalr="false"></settings>
        </type>
        <type colorType="grayscale">
            <settings forceConvertToRGB="true"></settings>
        </type>
    	<type format="default" colorType="default" compression="default" embeddedColorProfile="both" minSize="0" maxSize="0">
    		<settings allowRenderWithJAI="false" allowSubSampling="true" scaleWithScalr="false" mergeWithJAI="false" 
    		forceConvertToBuffered="false" forceConvertToRGB="false" forwardDirectlyIfPossible="true" preferredImageWriter="com.github.jaiimageio"></settings>
    	</type>
    </imageTypeSettings>
    
    <!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ * default 
		file names for pdf or image (file extension will be automatically added); 
		* define if sending of images or pdf should be with header "attachment" or 
		not; * currently available variables for file name: * - $datetime current 
		date and time (pdf and images) * * sample: * <defaultFileNames> * <pdf value="GoobiContentServer_$datetime" 
		sendAsAttachment="true"/> * </defaultFileNames> *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<defaultFileNames>
		<pdf value="ContentServer_$datetime" sendAsAttachment="true" />
		<image value="image_$datetime" sendAsAttachment="false" />
	</defaultFileNames>

    <defaultImageConfig defaultFormat="jpeg"></defaultImageConfig>

	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ * configuration 
		for the pdf generation, these parameters will change the performance of pdf 
		generation * - alwaysUseRenderedImage convert all images always to rendered 
		image before sending it to iText * - alwaysCompressToJPEG compress all images 
		always to jpeg image before sending it to iText * - metsFileGroup the filegroup 
		to use for pdf generation * - writeAsPdfA write PDF file as Pdf/A * - pagesize 
		default page size for pdf generation; possible values are 'A4', 'original' 
		and 'A4Box' * sample: <defaultPdfConfig alwaysUseRenderedImage="true" alwaysCompressToJPEG="true" 
        metsFileGroup="DEFAULT" writeAsPdfA="true" pagesize="A4"/> *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

    <!-- old config syntax, replaced by pdfConfig/config[@variant], see below -->
    <!--
	<defaultPdfConfig metsFileGroup="LOCAL" writeAsPdfA="false" imageScale="0.5" imageCompression="50"
        pagesize="original" />
    -->


      <pdfConfig>
                <config variant="pdfa"
                        metsFileGroup="LOCAL"
                        writeAsPdfA="true"
                        pagesize="original"
                        imageCompression="50"/>

                <config variant="default"
                        metsFileGroup="LOCAL"
                        writeAsPdfA="false"
                        imageScale="0.5"
                        imageCompression="50"
                        pagesize="original" />
        </pdfConfig>


	<!--########################################################## *############################################################# 
		* * ContentServer parameters * *############################################################# 
		*########################################################### -->

	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ * default 
		path to repository for all image processing requests * if repository path 
		is empty, in the servlet request has to be a complete url * sample: <defaultRepositoryPath 
		value="file:///home/goobi/imageRepository/" /> *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<!-- for digiverso -->
	<defaultRepositoryPathImages value="file:///opt/digiverso/goobi/metadata/" />
	<!-- for ucc <defaultRepositoryPathImages value="file:///" /> -->

	<defaultRepositoryPathPdf value="file:///"
		usage="true" />
		
		
	<defaultRepositoryPathAlto value="file:///"
		usage="true" fontFile="NotoSansArabic-Regular.ttf"/>

	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ * default 
		color for highlighting inside the image as RGB *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->

	<!-- gelb: 255 255 0 255 rot: 216 7 66 255 gruen: 0 154 107 255 blau: 0 
		154 255 255 -->

	<defaultHighlightColor valueRed="255" valueGreen="255"
		valueBlue="0" valueAlpha="255" />

	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ * configuration 
		if watermark should be used and url for watermark content configuration file 
		* sample: <watermark use="true" configFile="file:///home/goobi/config/watermarkconfig.xml" 
		/> *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<watermark use="false" scale="true" convertColorSpace="false" scaleToPercent="6"
        configFile="file:///opt/digiverso/goobi/config/config_imageFooter.xml" />

	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ * configuration 
		for the error watermark if message should not be shown on jsp echo page * 
		- title title on top of image * - titleSize fontsize for title * - messageSiz 
		fontsize for error message * - messageLineLength maximum size of letters 
		for each line *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<errorWaterMark title="Error" titleFontSize="20" 
		messageFontSize="14" messageMaxLineLength="60" />

	<!--########################################################## *############################################################# 
		* * GoobiContentServer parameters * *############################################################# 
		*########################################################### -->

	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ * default 
		path to repository for all mets processing requests * if repository path 
		is empty, in the servlet request has to be a complete url * sample: <defaultRepositoryPath 
		value="file:///home/goobi/metsRepository/" /> *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<defaultRepositoryPathMets value="" />

	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ * configuration 
		if titlepage for pdf file should be generated and * which config-file defines 
		how the title page should look like * * sample: <defaultRepositoryPath value="file:///home/goobi/config/pdftitlepage.xml" 
		/> *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<pdfTitlePage use="false"
		configFile="file:///opt/digiverso/goobi/config/config_pdfTitlePage.xml" />

    <restapi use="true" useWatermark="false">
         <discloseContentLocation>false</discloseContentLocation>
    </restapi>


	<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ * path to 
		contentCache and maximum size in MB * -path: path in file system * -size: 
		size in MB * -useCache: central switch, if no cache at all should be used 
		* -useShortFileNames: define if the cached file name should only consist 
		of given url-parameter and divid (usShortFileNames=true, not recommended) 
		* or if it should be full named (useShortFileNames=false, more secure option) 
		* * sample: <contentCache useCache="false" path="/home/goobi/gcsCache" size="300"/> 
		*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	<contentCache useCache="false" useShortFileNames="false"/>

	<thumbnailCache useCache="false" useShortFileNames="false"/>
		
	<pdfCache useCache="false" useShortFileNames="false" />

	<memoryUsage maximalParallelRequests="0" lowMemoryThreshold="0"></memoryUsage>
	
    <S3>                                                                                                                                              
        <useCustom>true</useCustom>                                                                                                                   
        <AccessKeyID>changeme</AccessKeyID>                                                                                             
        <SecretAccessKey>changeme</SecretAccessKey>                                                                     
        <Endpoint>https://myendpoint.tld</Endpoint>                                                                                            
    </S3> 

</config>
